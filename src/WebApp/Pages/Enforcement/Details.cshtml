@page "{id:int?}"
@using AirWeb.AppServices.Compliance.Search
@using AirWeb.AppServices.Enforcement.Permissions
@using AirWeb.Domain.EnforcementEntities.Cases
@using AirWeb.WebApp.Pages.Shared.DisplayTemplates
@using AirWeb.WebApp.Platform.PageModelHelpers
@using GaEpd.AppLibrary.Extensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model DetailsModel
@{
    var caseFile = Model.Item!;
    ViewData["Title"] = $"Facility {caseFile.FacilityId} – Enforcement ({Model.Id})";
}

@if (caseFile.IsDeleted)
{
    <div class="callout callout-danger mb-3">
        <div class="container-full">
            <div class="row justify-content-between align-items-center g-0 my-1">
                <div class="col">
                    <h2 class="h4 text-danger-emphasis">This Enforcement has been deleted.</h2>
                </div>
                @if (Model.UserCan[EnforcementOperation.Restore])
                {
                    <div class="col-auto d-print-none ms-2">
                        <a asp-page="Restore" asp-route-id="@Model.Id" class="btn btn-outline-warning">
                            Restore deleted enforcement
                        </a>
                    </div>
                }
            </div>
        </div>
        <p>
            Deleted by @Html.DisplayFor(_ => caseFile.DeletedBy, DisplayTemplate.NameOrPlaceholder)
            on @Html.DisplayFor(_ => caseFile.DeletedAt, DisplayTemplate.LongDateTimeOffsetNullable)
        </p>
        <h3 class="h5">Comments</h3>
        <p class="text-break text-pre-line">@Html.DisplayFor(_ => caseFile.DeleteComments, DisplayTemplate.TextOrPlaceholder)</p>
    </div>
}

<div class="row justify-content-between align-items-center">
    <div class="col-md">
        <h1>Enforcement</h1>
    </div>
    @if (!caseFile.IsDeleted)
    {
        <div class="col-md-auto ms-md-3 btn-group d-print-none">
            @if (Model.UserCan[EnforcementOperation.Close])
            {
                <a asp-page="Close" asp-route-id="@Model.Id.ToString()" class="btn btn-outline-primary">Close</a>
            }
            @if (Model.UserCan[EnforcementOperation.Reopen])
            {
                <a asp-page="Reopen" asp-route-id="@Model.Id.ToString()" class="btn btn-outline-primary">Reopen</a>
            }
            @if (Model.UserCan[EnforcementOperation.Edit])
            {
                <a asp-page="Edit" asp-route-id="@Model.Id.ToString()" class="btn btn-outline-primary">Edit</a>
            }
            @if (Model.UserCan[EnforcementOperation.Delete])
            {
                <a asp-page="Delete" asp-route-id="@Model.Id.ToString()" class="btn btn-outline-danger">Delete</a>
            }
        </div>
    }
</div>

<div class="row justify-content-between align-items-center mt-3 mt-md-2">
    <div
        class="col-sm-auto lead rounded ms-2 @(caseFile.CaseStatus == EnforcementCaseStatus.CaseClosed ? "bg-info-subtle" : "bg-warning-subtle")">
        <strong>@caseFile.CaseStatus.GetDescription()</strong>
    </div>
    <div class="col-sm-auto lead">Tracking #@Model.Id.ToString()</div>
</div>

<section class="mt-3">
    <h2 class="visually-hidden">Details</h2>
    <dl class="row mt-4">
        <dt class="col-sm-4 col-lg-3">Facility</dt>
        <dd class="col-sm-8 col-lg-9">
            <partial name="Shared/FacilityPartials/_FacilityAirsNameLink"
                     model="(caseFile.FacilityId, caseFile.FacilityName)" />
        </dd>
        <dt class="col-sm-4 col-lg-3">@Html.DisplayNameFor(_ => caseFile.ResponsibleStaff)</dt>
        <dd class="col-sm-8 col-lg-9">@Html.DisplayFor(_ => caseFile.ResponsibleStaff, DisplayTemplate.NameOrPlaceholder)</dd>
        <dt class="col-sm-4 col-lg-3">Status</dt>
        <dd class="col-sm-8 col-lg-9">
            @if (caseFile.IsClosed)
            {
                @:Closed by @Html.DisplayFor(_ => caseFile.ClosedBy, DisplayTemplate.NameOrPlaceholder)
                @:on @Html.DisplayFor(_ => caseFile.ClosedDate, DisplayTemplate.ShortDateOnlyNullable)
            }
            else
            {
                @:Open
            }
        </dd>
        <dt class="col-sm-4 col-lg-3">@Html.DisplayNameFor(_ => caseFile.DiscoveryDate)</dt>
        <dd class="col-sm-8 col-lg-9">@Html.DisplayFor(_ => caseFile.DiscoveryDate, DisplayTemplate.ShortDateOnlyNullable)</dd>
        @if (caseFile.HasFormalEnforcement)
        {
            <dt class="col-sm-4 col-lg-3">@Html.DisplayNameFor(_ => caseFile.DayZero)</dt>
            <dd class="col-sm-8 col-lg-9">@Html.DisplayFor(_ => caseFile.DayZero, DisplayTemplate.ShortDateOnlyNullable)</dd>
            <dt class="col-sm-4 col-lg-3">@Html.DisplayNameFor(_ => caseFile.ViolationType)</dt>
            <dd class="col-sm-8 col-lg-9">@Html.DisplayFor(_ => caseFile.ViolationType)</dd>
        }
        <dt class="mb-2">@Html.DisplayNameFor(_ => caseFile.Notes)</dt>
        <dd>
            <div
                class="text-break text-pre-line border rounded p-3">@Html.DisplayFor(_ => caseFile.Notes, DisplayTemplate.TextOrPlaceholder)</div>
        </dd>
    </dl>

    <section class="mt-3">
        <h3 class="h4">Discovery Events</h3>
        @if (!caseFile.ComplianceEvents.Any())
        {
            <p>
                <em>None.</em>
            </p>
        }
        else
        {
            <partial name="Shared/CompliancePartials/_WorkEntrySearchTable"
                     model="(caseFile.ComplianceEvents, (WorkEntrySearchDto?)null)" />
        }
    </section>

    @if (caseFile.HasFormalEnforcement)
    {
        <section class="mt-3">
            <h3 class="h4">Associated Pollutants & Programs</h3>
            <dl class="row">
                <dt class="col-sm-3 col-lg-2 mt-2">@Html.DisplayNameFor(_ => caseFile.Pollutants)</dt>
                <dd class="col-sm-9 col-lg-10 mt-2">
                    @if (caseFile.Pollutants.Count == 0)
                    {
                        <span class="text-body-secondary fw-lighter">@DefaultText.PlaceholderNone</span>
                    }
                    else
                    {
                        <ul class="mb-0 columns-md-2 columns-lg-3">
                            @foreach (var pollutant in caseFile.Pollutants)
                            {
                                <li>@pollutant.Description <span class="text-body-tertiary">(@pollutant.Code)</span>
                                </li>
                            }
                        </ul>
                    }
                </dd>
                <dt class="col-sm-3 col-lg-2 mt-2">@Html.DisplayNameFor(_ => caseFile.AirPrograms)</dt>
                <dd class="col-sm-9 col-lg-10 mt-2">
                    @if (caseFile.AirPrograms.Count == 0)
                    {
                        <span class="text-body-secondary fw-lighter">@DefaultText.PlaceholderNone</span>
                    }
                    else
                    {
                        <ul class="mb-0 columns-md-2 columns-lg-3">
                            @foreach (var airProgram in caseFile.AirPrograms)
                            {
                                <li>@airProgram.GetDescription()</li>
                            }
                        </ul>
                    }
                </dd>
            </dl>
        </section>
    }
</section>

<section class="mt-4">
    <h2 class="h3">Enforcement Actions</h2>

    @if (!caseFile.EnforcementActions.Any())
    {
        <p>
            <em>None.</em>
        </p>
    }
    else
    {
        <div class="row row-cols-1 g-3 mb-3">
            @foreach (var action in caseFile.EnforcementActions)
            {
                <div class="col">
                    <div id="@action.Id.ToString()" class="card">
                        <div class="card-body ">
                            <div class="text-break text-pre-line">@action.EnforcementActionType.GetDescription()</div>
                        </div>
                        <div class="card-footer">
                            <div class="container-full">
                                <div class="row justify-content-between align-items-center g-0 my-1">
                                    <small class="col text-body-secondary">
                                        @Html.DisplayFor(_ => action.ResponsibleStaff, DisplayTemplate.Name)
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</section>

<partial name="Shared/_CommentsSectionPartial" model="Model.CommentSection" />

@section Scripts {
    <partial name="Shared/_ValidationScriptsPartial" />
}
