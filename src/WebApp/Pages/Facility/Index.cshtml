@page
@using AirWeb.WebApp.Platform.Settings
@model IndexModel
@{
    ViewData["Title"] = "Facilities";
}

<h1>@ViewData["Title"]</h1>

<form method="post" class="row my-3" role="search">
    <label class="visually-hidden" for="FindId">Find by Facility ID</label>
    <div class="input-group w-auto my-2">
        <input id="FindId" asp-for="Id" type="search" aria-label="Search"
               placeholder="Find by Facility ID" class="form-control" />
        <button class="btn btn-primary" type="submit">View</button>
    </div>
    <span asp-validation-for="Id" class="text-danger-emphasis"></span>
</form>

@if (AppSettings.DevSettings.UseDevSettings && AppSettings.DevSettings.UseInMemoryIaipData)
{
    <p>Here is a short list of facilities for testing purposes.</p>
}
else
{
    <h2 class="h3">All Facilities</h2>
    <p>The following list includes all facilities in the IAIP that have been approved within the IAIP facility creator
        tool.</p>
}

<form class="container my-3">
    <label class="visually-hidden" for="facility-list-filter">Filter facility list</label>
    <div class="row row-cols-sm-auto align-items-center">
        <input id="facility-list-filter" class="form-control col-12 w-auto" placeholder="Filter facility list" />
        <span id="filtered-facility-list-count" class="col-12 text-body-secondary">
            (@(Model.Facilities.Count > 0 ? Model.Facilities.Count.ToString() : "none") found)
        </span>
    </div>
</form>

<ul id="facility-list">
    @foreach (var (facilityId, facilityName) in Model.Facilities)
    {
        <li>
            <a asp-page="/Facility/Details" asp-route-id="@facilityId"
               class="link-underline link-underline-opacity-25 link-underline-opacity-100-hover link-offset-2">
                @facilityId <span class="link-body-emphasis">–</span> @facilityName
            </a>
        </li>
    }
</ul>
<ul id="filtered-facility-list"></ul>

@section Footer {
    @if (!AppSettings.DevSettings.UseDevSettings || !AppSettings.DevSettings.UseInMemoryIaipData)
    {
        <div class="bg-info-subtle py-2 border-bottom d-print-none">
            <div class="container">
                <div class="row justify-content-between align-items-center">
                    <div class="col">
                        <small>
                            * <em>Note:</em> This page displays data from the IAIP, which is refreshed every 24&nbsp;hours.
                            If it appears out of date, you can manually refresh the data.
                        </small>
                    </div>
                    <div class="col-auto my-0 ms-3">
                        <a asp-route-refresh="true" class="btn btn-sm btn-outline-info icon-link">
                            <svg class="bi">
                                <use href="/images/app-icons.svg#app-icon-arrow-clockwise"></use>
                            </svg>
                            Refresh IAIP Data
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script asp-add-content-to-csp>
        document.addEventListener('DOMContentLoaded', () => {
            const filterInput = document.getElementById('facility-list-filter');
            const countOutput = document.getElementById('filtered-facility-list-count');
            const originalList = document.getElementById('facility-list');
            const originalListItems = originalList.getElementsByTagName('li');
            const filteredList = document.getElementById('filtered-facility-list');

            filterInput.addEventListener('input', () => {
                const filter = filterInput.value.toLowerCase();
                const fragment = document.createDocumentFragment();
                let count = 0;

                for (let i = 0; i < originalListItems.length; i++) {
                    const a = originalListItems[i].getElementsByTagName('a')[0];
                    const textValue = a.textContent || a.innerText;
                    if (textValue.toLowerCase().indexOf(filter) > -1) {
                        fragment.appendChild(originalListItems[i].cloneNode(true));
                        count++;
                    }
                }

                originalList.style.display = 'none';
                filteredList.innerHTML = '';
                filteredList.appendChild(fragment);
                countOutput.textContent = count > 0 ? ` (${count} found)` : ' (none found)';
            });
        });
    </script>
}
