@using AirWeb.WebApp.Models
@using AirWeb.WebApp.Pages.Shared.DisplayTemplates
@using AirWeb.WebApp.Pages.Shared.EditorTemplates
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model AirWeb.WebApp.Models.CommentsSectionModel

<section>
    <h2 class="h4 mt-4">Comments</h2>
    <div class="modal fade" id="deleteCommentModal" tabindex="-1" aria-labelledby="deleteCommentModalLabel"
         aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteCommentModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this comment?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Comments.Any())
    {
        <p>
            <em>None.</em>
        </p>
    }
    else
    {
        <div class="row row-cols-1 g-3 mb-3">
            @foreach (var comment in Model.Comments)
            {
                <div class="col">
                    <div id="@comment.Id.ToString()" class="card @(comment.Id == Model.NewCommentId ? "border-success" : "")">
                        <div class="card-body ">
                            <div class="text-break text-pre-line">@comment.Text</div>
                        </div>
                        <div class="card-footer">
                            <div class="container-full">
                                <div class="row justify-content-between align-items-center g-0 my-1">
                                    <small class="col text-body-secondary">
                                        Entered by @Html.DisplayFor(_ => comment.CommentBy, DisplayTemplate.Name)
                                        on @Html.DisplayFor(_ => comment.CommentedAt, DisplayTemplate.ShortDateTimeOffset)
                                    </small>
                                    @if (Model.CanDeleteComment)
                                    {
                                        <div class="col-auto d-print-none ms-2">
                                            <form class="delete-comment" asp-page-handler="DeleteComment" method="post">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                                <input name="commentId" type="hidden" value="@comment.Id.ToString()" />
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    @if (Model.CanAddComment)
    {
        if (!string.IsNullOrEmpty(Model.NotificationFailureMessage))
        {
            <partial name="Shared/_AlertPartial"
                     model="new DisplayMessage(DisplayMessage.AlertContext.Warning, Model.NotificationFailureMessage)" />
        }

        <div class="container bg-light-subtle border border-primary-subtle rounded-1 my-3 py-2 d-print-none">
            <h3 id="new-comment" class="h5">Add a comment</h3>

            <form method="post" asp-page-handler="NewComment">
                <div asp-validation-summary="All" class="alert alert-danger d-flex align-items-center" role="alert">
                    <svg class="bi me-2" role="img" aria-label="Danger:">
                        <use href="@Url.Content("~/images/app-icons.svg")#app-icon-exclamation-triangle-fill"></use>
                    </svg>
                </div>
                <div class="row">
                    <div class="mb-3">
                        @Html.EditorFor(m => m.NewComment.Comment, EditorTemplate.Textarea, new { Rows = 4 })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary mb-1">Comment</button>
                <input asp-for="NewComment.ItemId" type="hidden" />
            </form>
        </div>
    }
</section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const forms = document.querySelectorAll('form[class="delete-comment"]');
        let formToSubmit;

        forms.forEach((form) => {
            form.addEventListener('submit', (event) => {
                event.preventDefault(); // Prevent the default form submission
                formToSubmit = form; // Store the form to be submitted
                const deleteModal = new bootstrap.Modal(document.getElementById('deleteCommentModal'));
                deleteModal.show();
            });
        });

        document.getElementById('confirmDeleteButton').addEventListener('click', () => {
            if (formToSubmit) formToSubmit.submit(); // Submit the form if the user confirms

        });
    });
</script>
